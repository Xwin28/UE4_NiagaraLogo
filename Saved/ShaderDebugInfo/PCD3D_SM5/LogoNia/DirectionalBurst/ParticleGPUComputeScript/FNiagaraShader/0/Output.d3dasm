//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   uint UseColorBuffer_User_StaticMesh;// Offset:  372 Size:     4
//   uint SectionCount_User_StaticMesh; // Offset:  376 Size:     4
//   row_major float4x4 InstanceTransform_User_StaticMesh;// Offset:  384 Size:    64
//   row_major float4x4 InstanceTransformInverseTransposed_User_StaticMesh;// Offset:  448 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_User_StaticMesh;// Offset:  512 Size:    64
//   float InstanceInvDeltaTime_User_StaticMesh;// Offset:  576 Size:     4
//   float4 InstanceWorldVelocity_User_StaticMesh;// Offset:  592 Size:    16 [unused]
//   uint AreaWeightedSamplingName_User_StaticMesh;// Offset:  608 Size:     4
//   uint NumTexCoordName_User_StaticMesh;// Offset:  612 Size:     4
//   float3 TilingAxes_Local_CurlNoiseForce_VectorField;// Offset:  624 Size:    12 [unused]
//   float3 Dimensions_Local_CurlNoiseForce_VectorField;// Offset:  640 Size:    12 [unused]
//   float3 MinBounds_Local_CurlNoiseForce_VectorField;// Offset:  656 Size:    12 [unused]
//   float3 MaxBounds_Local_CurlNoiseForce_VectorField;// Offset:  672 Size:    12 [unused]
//   float3 TilingAxes_Emitter_VectorField32;// Offset:  688 Size:    12 [unused]
//   float3 Dimensions_Emitter_VectorField32;// Offset:  704 Size:    12 [unused]
//   float3 MinBounds_Emitter_VectorField32;// Offset:  720 Size:    12
//   float3 MaxBounds_Emitter_VectorField32;// Offset:  736 Size:    12
//   float MinTime_Emitter_VortexForceAmount_FloatCurve;// Offset:  748 Size:     4
//   float MaxTime_Emitter_VortexForceAmount_FloatCurve;// Offset:  752 Size:     4 [unused]
//   float InvTimeRange_Emitter_VortexForceAmount_FloatCurve;// Offset:  756 Size:     4
//   float CurveLUTNumMinusOne_Emitter_VortexForceAmount_FloatCurve;// Offset:  760 Size:     4
//   float MinTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  764 Size:     4
//   float MaxTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  768 Size:     4 [unused]
//   float InvTimeRange_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  772 Size:     4
//   float CurveLUTNumMinusOne_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  776 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4 [unused]
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   12 Size:     4
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   16 Size:     4
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:   24 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:   28 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16 [unused]
//   float Constants_Emitter_InitializeParticle_SpriteRotation;// Offset:   64 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   float Constants_Emitter_UniformRangedFloat001_Minimum;// Offset:   96 Size:     4
//   float Constants_Emitter_UniformRangedFloat001_Maximum;// Offset:  100 Size:     4
//   int Constants_Emitter_UniformRangedFloat001_RandomSeed;// Offset:  104 Size:     4 [unused]
//   int Constants_Emitter_CalulateSubImage_SubImageSize;// Offset:  108 Size:     4
//   float Constants_Emitter_ApplyInitialForces_PositionalForceWarmupTime;// Offset:  112 Size:     4 [unused]
//   float Constants_Emitter_Drag_Drag; // Offset:  116 Size:     4
//   float Constants_Emitter_Drag_RotationalDrag;// Offset:  120 Size:     4 [unused]
//   int Constants_Emitter_CurlNoiseForce_RandomSeed;// Offset:  124 Size:     4
//   float Constants_Emitter_CurlNoiseForce_NoiseFrequency;// Offset:  128 Size:     4
//   float4 Constants_Emitter_CurlNoiseForce_PanNoiseField;// Offset:  144 Size:    16 [unused]
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskAngle;// Offset:  160 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_CurlNoiseConeMaskFalloffAngle;// Offset:  164 Size:     4 [unused]
//   float Constants_Emitter_CurlNoiseForce_NoiseStrength;// Offset:  168 Size:     4
//   float4 User_VotexCenter;           // Offset:  176 Size:    16
//   float Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  192 Size:     4
//   float Constants_Emitter_VortexForce001_InfluenceFalloffRadius;// Offset:  196 Size:     4 [unused]
//   float4 Constants_Emitter_VortexForce001_VortexAxis;// Offset:  208 Size:    16
//   float Constants_Emitter_VortexForce001_OriginPullAmount;// Offset:  224 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  228 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  232 Size:     4 [unused]
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  236 Size:     4
//   float Emitter_SpawnRate;           // Offset:  240 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// VectorFieldSampler_Emitter_VectorField32    sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// IndexBuffer_User_StaticMesh       texture    uint         buf             t2      1 
// VertexBuffer_User_StaticMesh      texture   float         buf             t3      1 
// TangentBuffer_User_StaticMesh     texture  float4         buf             t4      1 
// TexCoordBuffer_User_StaticMesh    texture  float2         buf             t5      1 
// ColorBuffer_User_StaticMesh       texture  float4         buf             t6      1 
// SectionBuffer_User_StaticMesh     texture   uint4         buf             t7      1 
// TriangleBuffer_User_StaticMesh    texture   uint4         buf             t8      1 
// VectorFieldTexture_Emitter_VectorField32    texture  float4          3d             t9      1 
// CurveLUT_Emitter_VortexForceAmount_FloatCurve    texture   float         buf            t10      1 
// CurveLUT_Emitter_Value_ScaleFactor_FloatCurve    texture   float         buf            t11      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb2      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[49], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_constantbuffer CB3[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (float,float,float,float) t6
dcl_resource_buffer (uint,uint,uint,uint) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_resource_buffer (float,float,float,float) t10
dcl_resource_buffer (float,float,float,float) t11
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 22
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  iadd r1.x, r0.x, cb0[21].y
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.xxxx, t0.yxzw
  ishl r2.xyzw, cb0[21].yyyy, l(1, 2, 3, 5)
  iadd r2.xyzw, r0.xxxx, r2.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.z, r2.xxxx, t0.yzxw
  imad r3.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.w, r3.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r2.x, r2.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r3.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r3.wwww, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r2.zzzz, t0.yzxw
  imad r4.xyzw, l(9, 11, 12, 13), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r5.x, r4.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.y, r4.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r5.z, r4.wwww, t0.yzxw
  imad r4.xyzw, l(17, 18, 19, 20), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.w, r4.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r4.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r4.z, r4.wwww, t0.yzxw
  imad r6.xyzw, l(21, 22, 23, 24), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r7.x, r6.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r7.y, r6.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r7.z, r6.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r7.w, r6.wwww, t0.yzwx
  imad r6.xyzw, l(25, 26, 27, 28), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.w, r6.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r5.w, r6.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r6.x, r6.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r6.y, r6.wwww, t0.wxyz
  imad r8.xyzw, l(29, 30, 31, 33), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r6.z, r8.xxxx, t0.wyxz
  ld_indexable(buffer)(float,float,float,float) r6.w, r8.yyyy, t0.wyzx
  ld_indexable(buffer)(sint,sint,sint,sint) r8.x, r0.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r8.y, r8.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.w, r2.wwww, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r8.z, r8.wwww, t0.yzxw
  imad r9.xyzw, l(34, 35, 36, 37), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r8.w, r9.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r9.x, r9.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r9.y, r9.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r9.z, r9.wwww, t0.zwxy
  imad r10.xyzw, l(38, 39, 40, 41), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r9.w, r10.xxxx, t0.zwyx
  ld_indexable(buffer)(float,float,float,float) r11.x, r10.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r11.y, r10.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r11.z, r10.wwww, t0.yzxw
  imad r10.xyzw, l(42, 43, 44, 45), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r10.x, r10.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r10.y, r10.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r10.z, r10.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r12.x, r10.wwww, t0.xyzw
  imad r13.xyzw, l(46, 47, 48, 49), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r12.y, r13.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r12.z, r13.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r13.x, r13.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r13.y, r13.wwww, t0.yxzw
  imad r14.xyzw, l(50, 51, 54, 55), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r13.z, r14.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r10.w, r14.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r11.w, r14.zzzz, t0.yzwx
  ld_indexable(buffer)(sint,sint,sint,sint) r1.x, r1.xxxx, t1.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.x, r14.wwww, t0.xyzw
  imad r15.xy, l(56, 57, 0, 0), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r14.y, r15.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r14.z, r15.yyyy, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r12.w, r2.y, l(0.000010)
  add r13.w, r12.w, l(-0.000100)
  lt r13.w, r0.w, r13.w
  div r12.w, r0.w, r12.w
  mov r15.x, cb3[7].w
  mov r15.y, cb2[1].x
  imad r15.xy, r15.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
  imad r14.w, r15.y, l(0x3c88596c), r15.x
  imad r15.x, l(0x3c88596c), r14.w, r15.y
  imad r15.y, r14.w, r15.x, l(0x3c88596c)
  imad r14.w, r15.x, r15.y, r14.w
  ishr r14.w, r14.w, l(8)
  and r14.w, r14.w, l(0x00ffffff)
  utof r14.w, r14.w
  mad r15.xyz, r14.wwww, l(0.000244, 0.000244, 0.000244, 0.000000), r5.xyzx
  mul r15.xyz, r15.xyzx, cb3[8].xxxx
  mad r15.xyz, r15.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[45].xyzx
  add r16.xyz, -cb0[45].xyzx, cb0[46].xyzx
  div r15.xyz, r15.xyzx, r16.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t9.xyzw, s0, l(0.000000)
  mul r15.xyz, r15.xyzx, cb3[10].zzzz
  add r14.w, r12.w, -cb0[46].w
  mul_sat r14.w, r14.w, cb0[47].y
  mul r15.w, r14.w, cb0[47].z
  round_ni r15.w, r15.w
  lt r16.x, r15.w, cb0[47].z
  add r16.y, r15.w, l(1.000000)
  movc r16.x, r16.x, r16.y, r15.w
  mad r14.w, r14.w, cb0[47].z, -r15.w
  ftou r15.w, r15.w
  ld_indexable(buffer)(float,float,float,float) r15.w, r15.wwww, t10.yzwx
  ftou r16.x, r16.x
  ld_indexable(buffer)(float,float,float,float) r16.x, r16.xxxx, t10.xyzw
  add r16.x, -r15.w, r16.x
  mad r14.w, r14.w, r16.x, r15.w
  mul r14.w, r14.w, cb3[12].x
  add r16.xyz, -r5.xyzx, cb3[11].xyzx
  dp3 r15.w, r16.xyzx, r16.xyzx
  sqrt r16.w, r15.w
  lt r15.w, r16.w, l(0.000010)
  movc r16.xyzw, r15.wwww, l(0,0,1.000000,1.000000), r16.xyzw
  div r16.xyz, r16.xyzx, r16.wwww
  movc r16.xyz, r15.wwww, l(0,0,1.000000,0), r16.xyzx
  mul r17.xyz, r16.zxyz, cb3[13].yzxy
  mad r17.xyz, r16.yzxy, cb3[13].zxyz, -r17.xyzx
  mad r16.xyz, cb3[14].xxxx, r16.xyzx, r16.xyzx
  add r16.xyz, r16.xyzx, r17.xyzx
  dp3 r15.w, r16.xyzx, r16.xyzx
  rsq r15.w, r15.w
  mul r16.xyz, r15.wwww, r16.xyzx
  mad r15.xyz, r16.xyzx, r14.wwww, r15.xyzx
  max r14.w, r2.z, l(0.000100)
  div r14.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
  mul r15.xyz, r15.xyzx, r14.wwww
  mad r14.xyz, r15.xyzx, cb1[0].xxxx, r14.xyzx
  max r14.w, cb3[7].y, l(0.000000)
  mad r14.w, cb1[0].x, r14.w, l(1.000000)
  div r14.xyz, r14.xyzx, r14.wwww
  mad r5.xyz, r14.xyzx, cb1[0].xxxx, r5.xyzx
  add r14.w, r12.w, -cb0[47].w
  mul_sat r14.w, r14.w, cb0[48].y
  mul r15.x, r14.w, cb0[48].z
  round_ni r15.x, r15.x
  lt r15.y, r15.x, cb0[48].z
  add r15.z, r15.x, l(1.000000)
  movc r15.y, r15.y, r15.z, r15.x
  mad r14.w, r14.w, cb0[48].z, -r15.x
  ftou r15.x, r15.x
  ld_indexable(buffer)(float,float,float,float) r15.x, r15.xxxx, t11.xyzw
  ftou r15.y, r15.y
  ld_indexable(buffer)(float,float,float,float) r15.y, r15.yyyy, t11.yxzw
  add r15.y, -r15.x, r15.y
  mad r14.w, r14.w, r15.y, r15.x
  mul r14.w, r14.w, cb3[14].w
  mul r15.xy, r14.wwww, r3.xyxx
  mov r14.w, r14.x
  mov r15.zw, r14.yyyz
else 
  uge r16.x, r0.x, r0.y
  and r0.z, r0.z, r16.x
  if_nz r0.z
    iadd r0.y, -r0.y, r0.x
    ige r16.xyzw, r0.yyyy, cb0[10].xyzw
    and r16.xyzw, r16.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r16.y, r16.x
    iadd r0.z, r16.z, r0.z
    iadd r0.z, r16.w, r0.z
    ige r16.xyzw, r0.yyyy, cb0[11].xyzw
    and r16.xyzw, r16.xyzw, l(1, 1, 1, 1)
    iadd r16.x, r16.y, r16.x
    iadd r16.x, r16.z, r16.x
    iadd r16.x, r16.w, r16.x
    iadd r0.z, r0.z, r16.x
    iadd r0.y, r0.y, -cb0[r0.z + 12].w
    iadd r1.x, r0.y, cb2[0].y
    itof r0.y, r0.y
    mad r0.y, cb0[r0.z + 12].x, r0.y, cb0[r0.z + 12].y
    add r0.w, -r0.y, cb1[0].x
    add r0.y, -cb3[0].x, cb3[0].y
    mov r16.x, vThreadID.x
    mov r16.y, cb0[9].z
    imad r16.xy, r16.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r17.xyzw, r16.xxxx, r16.xxxx, l(0x3c3c2745, 0x3c22c138, 0x3beff51e, 0x3bd68f11)
    imad r18.xyzw, r16.yyyy, r17.xyzw, r16.xxxx
    imad r19.xyzw, r17.xyzw, r18.xyzw, r16.yyyy
    imad r16.xyzw, r18.xyzw, r19.xyzw, r16.xxxx
    imad r16.xyzw, r18.xyzw, r16.xyzw, r17.xyzw
    ishr r16.xyzw, r16.xyzw, l(8, 8, 8, 8)
    and r16.xyzw, r16.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r16.xyzw, r16.xyzw
    mul r0.y, r0.y, r16.x
    mad r3.y, r0.y, l(0.000000), cb3[0].x
    add r0.y, -cb3[0].w, cb3[1].x
    mul r0.y, r0.y, r16.y
    mad r2.y, r0.y, l(0.000000), cb3[0].w
    mul r3.z, r16.z, l(0.000000)
    ieq r0.y, cb0[23].z, l(0)
    if_z cb0[23].z
      mov r2.w, l(0)
      mov r8.xyz, l(-1,0,0,0)
    endif 
    if_z r0.y
      imad r0.x, r0.x, l(0x59834000), cb0[9].z
      iadd r0.z, r0.x, l(0x00196612)
      iadd r0.x, r0.z, r0.x
      imad r0.z, r0.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r16.x, r0.z, l(16)
      bfi r0.z, l(16), l(16), r0.z, r16.x
      imad r16.x, l(0xbf793ca1), r0.z, l(0x596c3c88)
      imad r16.y, r0.z, r16.x, l(0xbf793ca1)
      imad r0.z, r16.x, r16.y, r0.z
      imad r0.z, r16.y, r0.z, r16.x
      utof r0.z, r0.z
      mul r0.z, r0.z, l(0.000000)
      utof r16.x, cb0[23].z
      mul r0.z, r0.z, r16.x
      ftou r0.z, r0.z
      iadd r16.x, cb0[23].z, l(-1)
      umin r0.z, r0.z, r16.x
      ld_indexable(buffer)(uint,uint,uint,uint) r17.xyzw, r0.zzzz, t7.xyzw
      iadd r0.z, r0.x, l(0x00196612)
      iadd r0.x, r0.z, r0.x
      imad r0.z, r0.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r16.x, r0.z, l(16)
      bfi r0.z, l(16), l(16), r0.z, r16.x
      imad r16.x, l(0xbf793ca1), r0.z, l(0x596c3c88)
      imad r16.y, r0.z, r16.x, l(0xbf793ca1)
      imad r0.z, r16.x, r16.y, r0.z
      imad r0.z, r16.y, r0.z, r16.x
      utof r0.z, r0.z
      mul r0.z, r0.z, l(0.000000)
      lt r0.z, r17.z, r0.z
      if_nz r0.z
        ld_indexable(buffer)(uint,uint,uint,uint) r17.xy, r17.wwww, t7.xyzw
      endif 
      iadd r0.z, r0.x, l(0x00196612)
      iadd r0.x, r0.z, r0.x
      imad r0.z, r0.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r16.x, r0.z, l(16)
      bfi r0.z, l(16), l(16), r0.z, r16.x
      imad r16.x, l(0xbf793ca1), r0.z, l(0x596c3c88)
      imad r16.y, r0.z, r16.x, l(0xbf793ca1)
      imad r0.z, r16.x, r16.y, r0.z
      imad r0.z, r16.y, r0.z, r16.x
      utof r0.z, r0.z
      mul r0.z, r0.z, l(0.000000)
      if_z cb0[38].x
        utof r16.x, r17.y
        mul r16.x, r0.z, r16.x
        ftou r16.x, r16.x
        iadd r16.y, r17.y, l(-1)
        umin r16.x, r16.y, r16.x
        iadd r8.x, r16.x, r17.x
      else 
        utof r16.x, r17.y
        mul r0.z, r0.z, r16.x
        ftou r0.z, r0.z
        iadd r16.x, r17.y, l(-1)
        umin r0.z, r0.z, r16.x
        iadd r16.x, r0.z, r17.x
        ld_indexable(buffer)(uint,uint,uint,uint) r16.xy, r16.xxxx, t8.xyzw
        iadd r16.z, r0.x, l(0x00196612)
        iadd r0.x, r0.x, r16.z
        imad r16.z, r16.z, l(0x0019660d), l(0x3c6ef35f)
        ushr r17.y, r16.z, l(16)
        bfi r16.z, l(16), l(16), r16.z, r17.y
        imad r17.y, l(0xbf793ca1), r16.z, l(0x596c3c88)
        imad r17.z, r16.z, r17.y, l(0xbf793ca1)
        imad r16.z, r17.y, r17.z, r16.z
        imad r16.z, r17.z, r16.z, r17.y
        utof r16.z, r16.z
        mul r16.z, r16.z, l(0.000000)
        lt r16.x, r16.x, r16.z
        movc r0.z, r16.x, r16.y, r0.z
        iadd r8.x, r0.z, r17.x
      endif 
      iadd r0.z, r0.x, l(0x00196612)
      iadd r0.x, r0.z, r0.x
      imad r0.z, r0.z, l(0x0019660d), l(0x3c6ef35f)
      ushr r16.x, r0.z, l(16)
      bfi r0.z, l(16), l(16), r0.z, r16.x
      imad r16.x, l(0xbf793ca1), r0.z, l(0x596c3c88)
      imad r16.y, r0.z, r16.x, l(0xbf793ca1)
      imad r0.z, r16.x, r16.y, r0.z
      imad r0.z, r16.y, r0.z, r16.x
      utof r0.z, r0.z
      mul r0.z, r0.z, l(0.000000)
      imad r0.x, r0.x, l(0x0019660d), l(0x54264e49)
      ushr r16.x, r0.x, l(16)
      bfi r0.x, l(16), l(16), r0.x, r16.x
      imad r16.x, l(0xbf793ca1), r0.x, l(0x596c3c88)
      imad r16.y, r0.x, r16.x, l(0xbf793ca1)
      imad r0.x, r16.x, r16.y, r0.x
      imad r0.x, r16.y, r0.x, r16.x
      utof r0.x, r0.x
      mul r16.x, r0.x, l(0.000000)
      sqrt r0.z, r0.z
      add r8.y, -r0.z, l(1.000000)
      mad r0.x, -r0.x, l(0.000000), l(1.000000)
      mul r2.w, r0.x, r0.z
      mul r8.z, r0.z, r16.x
    endif 
    if_z cb0[23].z
      mov r12.xyz, l(1.000000,0,0,0)
      mov r13.xyz, l(0,0,1.000000,0)
    endif 
    if_z r0.y
      imul null, r0.x, r8.x, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t2.xyzw
      ishl r0.z, r0.x, l(1)
      imad r16.xy, r8.xxxx, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r16.x, r16.xxxx, t2.xyzw
      ishl r16.z, r16.x, l(1)
      ld_indexable(buffer)(uint,uint,uint,uint) r16.y, r16.yyyy, t2.yxzw
      ishl r17.x, r16.y, l(1)
      ld_indexable(buffer)(float,float,float,float) r17.yzw, r0.zzzz, t4.wxyz
      bfi r0.x, l(31), l(1), r0.x, l(1)
      ld_indexable(buffer)(float,float,float,float) r18.xyz, r0.xxxx, t4.xyzw
      ld_indexable(buffer)(float,float,float,float) r19.xyz, r16.zzzz, t4.xyzw
      bfi r0.x, l(31), l(1), r16.x, l(1)
      ld_indexable(buffer)(float,float,float,float) r20.xyz, r0.xxxx, t4.xyzw
      ld_indexable(buffer)(float,float,float,float) r21.xyz, r17.xxxx, t4.xyzw
      bfi r0.x, l(31), l(1), r16.y, l(1)
      ld_indexable(buffer)(float,float,float,float) r16.xyz, r0.xxxx, t4.xyzw
      mul r20.xyz, r2.wwww, r20.xyzx
      mad r18.xyz, r18.xyzx, r8.yyyy, r20.xyzx
      mad r16.xyz, r16.xyzx, r8.zzzz, r18.xyzx
      dp3 r0.x, r16.xyzx, r16.xyzx
      rsq r0.x, r0.x
      mul r13.xyz, r0.xxxx, r16.xyzx
      mul r16.xyz, r2.wwww, r19.xyzx
      mad r16.xyz, r17.yzwy, r8.yyyy, r16.xyzx
      mad r16.xyz, r21.xyzx, r8.zzzz, r16.xyzx
      dp3 r0.x, r16.xyzx, r16.xyzx
      rsq r0.x, r0.x
      mul r12.xyz, r0.xxxx, r16.xyzx
    endif 
    if_z cb0[23].z
      mov r6.yzw, l(0,0,0,0)
    endif 
    if_z r0.y
      imul null, r0.x, r8.x, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t2.xyzw
      imul null, r0.z, r0.x, l(3)
      imad r16.xy, r8.xxxx, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r16.x, r16.xxxx, t2.xyzw
      imul null, r16.z, r16.x, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r16.y, r16.yyyy, t2.yxzw
      imul null, r17.x, r16.y, l(3)
      ld_indexable(buffer)(float,float,float,float) r17.y, r0.zzzz, t3.wxyz
      imad r0.xz, r0.xxxx, l(3, 0, 3, 0), l(1, 0, 2, 0)
      ld_indexable(buffer)(float,float,float,float) r17.z, r0.xxxx, t3.wyxz
      ld_indexable(buffer)(float,float,float,float) r17.w, r0.zzzz, t3.wyzx
      ld_indexable(buffer)(float,float,float,float) r18.x, r16.zzzz, t3.xyzw
      imad r0.xz, r16.xxxx, l(3, 0, 3, 0), l(1, 0, 2, 0)
      ld_indexable(buffer)(float,float,float,float) r18.y, r0.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r18.z, r0.zzzz, t3.yzxw
      ld_indexable(buffer)(float,float,float,float) r19.x, r17.xxxx, t3.xyzw
      imad r0.xz, r16.yyyy, l(3, 0, 3, 0), l(1, 0, 2, 0)
      ld_indexable(buffer)(float,float,float,float) r19.y, r0.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r19.z, r0.zzzz, t3.yzxw
      mul r16.xyz, r2.wwww, r18.xyzx
      mad r16.xyz, r17.yzwy, r8.yyyy, r16.xyzx
      mad r6.yzw, r19.xxyz, r8.zzzz, r16.xxyz
    endif 
    if_z cb0[23].z
      mov r11.xyz, l(0,0,0,0)
    endif 
    if_z r0.y
      imul null, r0.x, r8.x, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t2.xyzw
      imul null, r0.y, r0.x, l(3)
      imad r16.xy, r8.xxxx, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r16.xxxx, t2.yzxw
      imul null, r16.x, r0.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r16.y, r16.yyyy, t2.yxzw
      imul null, r16.z, r16.y, l(3)
      ld_indexable(buffer)(float,float,float,float) r17.x, r0.yyyy, t3.xyzw
      imad r0.xy, r0.xxxx, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r17.y, r0.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r17.z, r0.yyyy, t3.yzxw
      ld_indexable(buffer)(float,float,float,float) r18.x, r16.xxxx, t3.xyzw
      imad r0.xy, r0.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r18.y, r0.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r18.z, r0.yyyy, t3.yzxw
      ld_indexable(buffer)(float,float,float,float) r0.x, r16.zzzz, t3.xyzw
      imad r16.xy, r16.yyyy, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r0.y, r16.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r0.z, r16.yyyy, t3.yzxw
      mul r16.xyz, r2.wwww, r18.xyzx
      mad r16.xyz, r17.xyzx, r8.yyyy, r16.xyzx
      mad r0.xyz, r0.xyzx, r8.zzzz, r16.xyzx
      mul r16.xyz, r0.yyyy, cb0[25].xyzx
      mad r16.xyz, r0.xxxx, cb0[24].xyzx, r16.xyzx
      mad r16.xyz, r0.zzzz, cb0[26].xyzx, r16.xyzx
      add r16.xyz, r16.xyzx, cb0[27].xyzx
      mul r17.xyz, r0.yyyy, cb0[33].xyzx
      mad r17.xyz, r0.xxxx, cb0[32].xyzx, r17.xyzx
      mad r0.xyz, r0.zzzz, cb0[34].xyzx, r17.xyzx
      add r0.xyz, r0.xyzx, cb0[35].xyzx
      add r0.xyz, -r0.xyzx, r16.xyzx
      mul r11.xyz, r0.xyzx, cb0[36].xxxx
    endif 
    if_nz cb0[23].y
      imul null, r0.x, r8.x, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t2.xyzw
      imad r0.yz, r8.xxxx, l(0, 3, 3, 0), l(0, 1, 2, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r0.yyyy, t2.yxzw
      ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t2.yzxw
      ld_indexable(buffer)(float,float,float,float) r17.xyzw, r0.xxxx, t6.xyzw
      ld_indexable(buffer)(float,float,float,float) r18.xyzw, r0.yyyy, t6.xyzw
      ld_indexable(buffer)(float,float,float,float) r19.xyzw, r0.zzzz, t6.xyzw
      mul r18.xyzw, r2.wwww, r18.zyxw
      mad r17.xyzw, r17.zyxw, r8.yyyy, r18.xyzw
      mad r7.xyzw, r19.zyxw, r8.zzzz, r17.xyzw
    else 
      mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
    endif 
    if_nz cb0[38].y
      imul null, r0.x, r8.x, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t2.xyzw
      imad r0.yz, r8.xxxx, l(0, 3, 3, 0), l(0, 1, 2, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r0.yyyy, t2.yxzw
      ld_indexable(buffer)(uint,uint,uint,uint) r0.z, r0.zzzz, t2.yzxw
      imul null, r0.x, r0.x, cb0[38].y
      ld_indexable(buffer)(float,float,float,float) r16.xy, r0.xxxx, t5.xyzw
      imul null, r0.x, r0.y, cb0[38].y
      ld_indexable(buffer)(float,float,float,float) r0.xy, r0.xxxx, t5.xyzw
      imul null, r0.z, r0.z, cb0[38].y
      ld_indexable(buffer)(float,float,float,float) r17.xy, r0.zzzz, t5.xyzw
      mul r0.xy, r2.wwww, r0.xyxx
      mad r0.xy, r16.xyxx, r8.yyyy, r0.xyxx
      mad r9.zw, r17.xxxy, r8.zzzz, r0.xxxy
    else 
      mov r9.zw, l(0,0,0,0)
    endif 
    add r0.x, -cb3[6].x, cb3[6].y
    mul r0.x, r0.x, r16.w
    mad r0.x, r0.x, l(0.000000), cb3[6].x
    mul r0.xyz, r0.xxxx, r13.xyzx
    itof r16.x, cb3[6].w
    mul r16.yz, r9.zzwz, r16.xxxx
    round_z r16.z, r16.z
    add r16.z, r16.z, l(1.000000)
    mad r16.x, r16.z, r16.x, r16.y
    add r11.w, r16.x, l(1.000000)
    max r16.x, r2.y, l(0.000010)
    add r16.y, r16.x, l(-0.000100)
    lt r13.w, r0.w, r16.y
    div r12.w, r0.w, r16.x
    mov r16.x, cb3[7].w
    mov r16.y, cb2[1].x
    imad r16.xy, r16.xyxx, l(0x0019660d, 0x0019660d, 0, 0), l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r16.x, r16.y, l(0x3d0757ad), r16.x
    imad r16.y, l(0x3d0757ad), r16.x, r16.y
    imad r16.z, r16.x, r16.y, l(0x3d0757ad)
    imad r16.x, r16.y, r16.z, r16.x
    ishr r16.x, r16.x, l(8)
    and r16.x, r16.x, l(0x00ffffff)
    utof r16.x, r16.x
    mad r16.xyz, r16.xxxx, l(0.000244, 0.000244, 0.000244, 0.000000), r6.yzwy
    mul r16.xyz, r16.xyzx, cb3[8].xxxx
    mad r16.xyz, r16.xyzx, l(125.000000, 125.000000, 125.000000, 0.000000), -cb0[45].xyzx
    add r17.xyz, -cb0[45].xyzx, cb0[46].xyzx
    div r16.xyz, r16.xyzx, r17.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t9.xyzw, s0, l(0.000000)
    mul r16.xyz, r16.xyzx, cb3[10].zzzz
    add r16.w, r12.w, -cb0[46].w
    mul_sat r16.w, r16.w, cb0[47].y
    mul r17.x, r16.w, cb0[47].z
    round_ni r17.x, r17.x
    lt r17.y, r17.x, cb0[47].z
    add r17.z, r17.x, l(1.000000)
    movc r17.y, r17.y, r17.z, r17.x
    mad r16.w, r16.w, cb0[47].z, -r17.x
    ftou r17.x, r17.x
    ld_indexable(buffer)(float,float,float,float) r17.x, r17.xxxx, t10.xyzw
    ftou r17.y, r17.y
    ld_indexable(buffer)(float,float,float,float) r17.y, r17.yyyy, t10.yxzw
    add r17.y, -r17.x, r17.y
    mad r16.w, r16.w, r17.y, r17.x
    mul r16.w, r16.w, cb3[12].x
    add r17.xyz, -r6.yzwy, cb3[11].xyzx
    dp3 r18.x, r17.xyzx, r17.xyzx
    sqrt r17.w, r18.x
    lt r18.x, r17.w, l(0.000010)
    movc r17.xyzw, r18.xxxx, l(0,0,1.000000,1.000000), r17.xyzw
    div r17.xyz, r17.xyzx, r17.wwww
    movc r17.xyz, r18.xxxx, l(0,0,1.000000,0), r17.xyzx
    mul r18.xyz, r17.zxyz, cb3[13].yzxy
    mad r18.xyz, r17.yzxy, cb3[13].zxyz, -r18.xyzx
    mad r17.xyz, cb3[14].xxxx, r17.xyzx, r17.xyzx
    add r17.xyz, r17.xyzx, r18.xyzx
    dp3 r17.w, r17.xyzx, r17.xyzx
    rsq r17.w, r17.w
    mul r17.xyz, r17.wwww, r17.xyzx
    mad r16.xyz, r17.xyzx, r16.wwww, r16.xyzx
    mad r0.xyz, r16.xyzx, r0.wwww, r0.xyzx
    max r16.x, cb3[7].y, l(0.000000)
    mad r16.x, r0.w, r16.x, l(1.000000)
    div r14.xyz, r0.xyzx, r16.xxxx
    mad r5.xyz, r14.xyzx, r0.wwww, r6.yzwy
    add r0.x, r12.w, -cb0[47].w
    mul_sat r0.x, r0.x, cb0[48].y
    mul r0.y, r0.x, cb0[48].z
    round_ni r0.y, r0.y
    lt r0.z, r0.y, cb0[48].z
    add r16.x, r0.y, l(1.000000)
    movc r0.z, r0.z, r16.x, r0.y
    mad r0.x, r0.x, cb0[48].z, -r0.y
    ftou r0.y, r0.y
    ld_indexable(buffer)(float,float,float,float) r0.y, r0.yyyy, t11.yxzw
    ftou r0.z, r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.zzzz, t11.yzxw
    add r0.z, -r0.y, r0.z
    mad r0.x, r0.x, r0.z, r0.y
    mul r0.x, r0.x, cb3[14].w
    mul r15.y, r0.x, r3.y
    mov r1.yzw, l(0,1.000000,1.000000,1.000000)
    mov r3.x, r3.y
    mov r2.xz, l(1.000000,0,1.000000,0)
    mov r14.w, r14.x
    mov r15.zw, r14.yyyz
    mov r3.w, l(1.000000)
    mov r4.w, r13.x
    mov r5.w, r13.y
    mov r6.x, r13.z
    mov r8.w, r12.x
    mov r9.xy, r12.yzyy
    mov r10.xyz, l(1.000000,1.000000,1.000000,0)
    mov r15.x, r15.y
  else 
    mov r0.w, l(0)
    mov r3.xyzw, l(0,0,0,0)
    mov r7.xyzw, l(0,0,0,0)
    mov r4.w, l(0)
    mov r5.xyzw, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r8.xyzw, l(0,0,0,0)
    mov r9.xyzw, l(0,0,0,0)
    mov r10.xyz, l(0,0,0,0)
    mov r12.xyzw, l(0,0,0,0)
    mov r15.xyzw, l(0,0,0,0)
    mov r11.xyzw, l(0,0,0,0)
    mov r1.xyzw, l(0,0,0,0)
    mov r14.xyzw, l(0,0,0,0)
    mov r13.xyzw, l(0,0,0,0)
  endif 
  mov r4.xyz, l(0,0,0,0)
  mov r10.w, l(0)
endif 
and r0.x, r13.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r16.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r16.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r16.w, r16.y, l(0), g0.xxxx
  iadd r16.w, r0.y, r16.w
  ld_structured r17.x, r16.z, l(0), g0.xxxx
  iadd r17.x, r16.w, r17.x
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r16.x, l(0), r0.x
  store_structured g0.x, r16.y, l(0), r0.y
  store_structured g0.x, r16.z, l(0), r16.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r17.x
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r16.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r16.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r16.w, r16.y, l(0), g1.xxxx
  iadd r16.w, r0.z, r16.w
  ld_structured r17.x, r16.z, l(0), g1.xxxx
  iadd r17.x, r16.w, r17.x
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r16.x, l(0), r0.y
  store_structured g1.x, r16.y, l(0), r0.z
  store_structured g1.x, r16.z, l(0), r16.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r17.x
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r16.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r16.x
endif 
sync_g_t
if_nz r13.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r1.yyyy
  ishl r16.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r16.xyzw, r0.xxxx, r16.xyzw
  iadd r16.xyzw, r16.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r16.xxxx, r1.zzzz
  imad r17.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r17.xyzw, r17.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r17.xxxx, r1.wwww
  store_uav_typed u1.xyzw, r16.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r17.yyyy, r3.xxxx
  store_uav_typed u1.xyzw, r17.zzzz, r3.yyyy
  store_uav_typed u1.xyzw, r17.wwww, r2.yyyy
  store_uav_typed u1.xyzw, r16.zzzz, r2.zzzz
  imad r17.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r17.xyzw, r17.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r17.xxxx, r3.zzzz
  store_uav_typed u1.xyzw, r17.yyyy, r12.wwww
  store_uav_typed u1.xyzw, r17.zzzz, r5.xxxx
  store_uav_typed u1.xyzw, r17.wwww, r5.yyyy
  imad r17.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r17.xyzw, r17.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r17.xxxx, r5.zzzz
  store_uav_typed u1.xyzw, r17.yyyy, r14.wwww
  store_uav_typed u1.xyzw, r17.zzzz, r15.zzzz
  store_uav_typed u1.xyzw, r16.wwww, r15.wwww
  store_uav_typed u1.xyzw, r17.wwww, r3.wwww
  imad r3.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r3.xyzw, r3.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r3.xxxx, r4.xxxx
  store_uav_typed u1.xyzw, r3.yyyy, r4.yyyy
  store_uav_typed u1.xyzw, r3.zzzz, r4.zzzz
  store_uav_typed u1.xyzw, r3.wwww, r7.xxxx
  imad r3.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r3.xyzw, r3.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r3.xxxx, r7.yyyy
  store_uav_typed u1.xyzw, r3.yyyy, r7.zzzz
  store_uav_typed u1.xyzw, r3.zzzz, r7.wwww
  store_uav_typed u1.xyzw, r3.wwww, r4.wwww
  imad r3.xyzw, l(26, 27, 28, 29), cb0[21].zzzz, r0.xxxx
  iadd r3.xyzw, r3.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r3.xxxx, r5.wwww
  store_uav_typed u1.xyzw, r3.yyyy, r6.xxxx
  store_uav_typed u1.xyzw, r3.zzzz, r6.yyyy
  store_uav_typed u1.xyzw, r3.wwww, r6.zzzz
  imad r3.xyzw, l(30, 31, 33, 34), cb0[21].zzzz, r0.xxxx
  iadd r3.xyzw, r3.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r3.xxxx, r6.wwww
  store_uav_typed u0.xyzw, r0.yyyy, r8.xxxx
  store_uav_typed u1.xyzw, r3.yyyy, r8.yyyy
  ishl r0.y, cb0[21].z, l(5)
  iadd r0.y, r0.x, r0.y
  iadd r0.y, r0.y, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r2.wwww
  store_uav_typed u1.xyzw, r3.zzzz, r8.zzzz
  store_uav_typed u1.xyzw, r3.wwww, r8.wwww
  imad r2.xyzw, l(35, 36, 37, 38), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r9.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r9.yyyy
  store_uav_typed u1.xyzw, r2.zzzz, r9.zzzz
  store_uav_typed u1.xyzw, r2.wwww, r9.wwww
  imad r2.xyzw, l(39, 40, 41, 42), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r11.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r11.yyyy
  store_uav_typed u1.xyzw, r2.zzzz, r11.zzzz
  store_uav_typed u1.xyzw, r2.wwww, r10.xxxx
  imad r2.xyzw, l(43, 44, 45, 46), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r10.yyyy
  store_uav_typed u1.xyzw, r2.yyyy, r10.zzzz
  store_uav_typed u1.xyzw, r2.zzzz, r12.xxxx
  store_uav_typed u1.xyzw, r2.wwww, r12.yyyy
  imad r2.xyzw, l(47, 48, 49, 50), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r12.zzzz
  store_uav_typed u1.xyzw, r2.yyyy, r13.xxxx
  store_uav_typed u1.xyzw, r2.zzzz, r13.yyyy
  store_uav_typed u1.xyzw, r2.wwww, r13.zzzz
  imad r2.xyzw, l(51, 52, 53, 54), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r10.wwww
  store_uav_typed u1.xyzw, r2.yyyy, r15.xxxx
  store_uav_typed u1.xyzw, r2.zzzz, r15.yyyy
  store_uav_typed u1.xyzw, r2.wwww, r11.wwww
  store_uav_typed u0.xyzw, r0.zzzz, r1.xxxx
  imad r0.xyz, l(55, 56, 57, 0), cb0[21].zzzz, r0.xxxx
  iadd r0.xyz, r0.xyzx, cb0[20].yyyy
  store_uav_typed u1.xyzw, r0.xxxx, r14.xxxx
  store_uav_typed u1.xyzw, r0.yyyy, r14.yyyy
  store_uav_typed u1.xyzw, r0.zzzz, r14.zzzz
endif 
ret 
// Approximately 705 instruction slots used
